<Window x:Class="InterfaceApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InterfaceApp"
        mc:Ignorable="d"
        Title="Макет интерфейса приложения - без функционала!" Height="800" Background="{x:Null}" ShowActivated="True" Width="953" >

    <Window.Resources>

        <!--Заглушка что бы заполнить список постов.-->
        <!--Create an instance of TestData as a resource.-->
        <local:SideBarHashTags x:Key="NickSideList" />

        <!--Images.-->
        <BitmapImage x:Key="ImageFind" CreateOptions="IgnoreImageCache" CacheOption="OnLoad" UriSource="img/search_icon.png" />
        <BitmapImage x:Key="ImageHome" CreateOptions="IgnoreImageCache" CacheOption="OnLoad" UriSource="img/home icon.png" />
        <BitmapImage x:Key="ImageFace" CreateOptions="IgnoreImageCache" CacheOption="OnLoad" UriSource="img/Nmd_140x140.jpg" />

        <!--Control colors.-->
        <Color x:Key="ReadBtnColor">#66D99F</Color>
        <Color x:Key="FinfBtnColor">#0083FE</Color>

        <!--Border colors -->
        <Color x:Key="BorderColor">#A2AEBA</Color>
        <Color x:Key="BorderBtnColor">#0083FE</Color>

        <!--Text colors.-->
        <Color x:Key="HeaderColor">#4E5F6F</Color>
        <Color x:Key="RefColor">#0083FE</Color>
        <Color x:Key="PostColor">#8998A5</Color>
        <Color x:Key="TimeColor">#A2AEBA</Color>

        <!--Brushes.-->
        <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}"/>
        <SolidColorBrush x:Key="RefBrush" Color="{DynamicResource RefColor}"/>
        <SolidColorBrush x:Key="LightGray" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="MainBrush" Color="White"/>

        <!--Font.-->
        <FontFamily x:Key="MainFont">Roboto</FontFamily>
        
        <!--Styles -->

        <!--Border Styles.-->
        <Style x:Key="RoundCorner" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="14" />
        </Style>

        <Style BasedOn="{StaticResource RoundCorner}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <Style x:Key="SideRectBorder" BasedOn="{StaticResource {x:Type Border}}" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="0" />
        </Style>

        <Style x:Key="TopRoundBorder"  BasedOn="{StaticResource RoundCorner}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="14,14,0,0" /> 
        </Style>


        <!--Grid Styles.-->
        <Style TargetType="{x:Type Grid}">
            <Setter Property="ShowGridLines" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource MainBrush}"/>
        </Style>

        <Style x:Key="Test" BasedOn="{StaticResource {x:Type Grid}}" TargetType="{x:Type Grid}">
            <Setter Property="ShowGridLines" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource MainBrush}"/>
        </Style>

        <!--Text Control Styles.-->
        
        <Style x:Key="HeaderText" TargetType="{x:Type Control}">
            <Setter Property="FontFamily" Value="{DynamicResource MainFont}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource HeaderColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FindText" TargetType="{x:Type Control}">
            <Setter Property="FontFamily" Value="{DynamicResource MainFont}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource PostColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock Styles.-->

        <Style x:Key="BaseTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{DynamicResource MainFont}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Normal"/>
        </Style>

        <Style x:Key="PostTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource PostColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TimeTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource TimeColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NickPostTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource RefColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NamePostTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource HeaderColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HashText" TargetType="{x:Type Hyperlink}">
            <Setter Property="FontFamily" Value="{DynamicResource MainFont}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextDecorations" Value="{x:Null}" />
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource RefColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AtherRefText" BasedOn="{StaticResource HashText}" TargetType="{x:Type Hyperlink}">
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <!--TextBlock SideBar Styles.-->
        
        <Style x:Key="NameSideTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource HeaderColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NickSideTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource RefColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActualSideTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource HeaderColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ReadTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource PostColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NumberTextBlock" BasedOn="{StaticResource BaseTextBlock}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource HeaderColor}"/>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!--Control templates.-->
        <ControlTemplate x:Key="FindTemplate">
            <Border x:Name="FindBorder" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="3" Background="{TemplateBinding Control.Background}">
                <ScrollViewer Margin="5.0" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="Border" CornerRadius="4" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="Gold" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="Orange" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        

        <Style TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource RefBrush}"/>
        </Style>

        <Style x:Key="BlueBtn" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource RefBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        
        <Style x:Key="MyListBox" TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Background="{TemplateBinding ListBox.Background}" Style="{DynamicResource TopRoundBorder}">
                            <DockPanel ClipToBounds="True">
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" ClipToBounds="True" >
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                                IsItemsHost="True"  ClipToBounds="True" />
                                </ScrollViewer>

                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        <Style BasedOn="{StaticResource MainBtn}" TargetType="{x:Type Button}"/>
        
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template" Value="{StaticResource FindTemplate}"/>
        </Style>
    -->

        <Style x:Key="temp" TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels" 
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
            <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="40" />
            <Setter Property="AllowDrop"
          Value="true" />
            <Setter Property="Template" Value="{StaticResource FindTemplate}"/>
        </Style>


    </Window.Resources>



    <Grid>
        <!---->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="370*" MinWidth="300"/>
            <ColumnDefinition Width="583*" MinWidth="500"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="LeftGrid" >
            <Grid.RowDefinitions>
                <RowDefinition Height="330" MinHeight="300"/>
                <RowDefinition Height="80" MinHeight="80"/>
                <RowDefinition Height="1*" MinHeight="150"/>
            </Grid.RowDefinitions>
            
            <Border Grid.RowSpan="3" Panel.ZIndex="0" />
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Border x:Name="TopLeftBorder" Background="Black" BorderThickness="0" CornerRadius="14,14,0,0" />
                <Ellipse Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="126" Height="126" Fill="{DynamicResource BorderBrush}"/>
                <Image Source="{DynamicResource ImageFace}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Width="120" Height="120" Stretch="Fill" Grid.RowSpan="3" Panel.ZIndex="1" >
                    <Image.Clip>
                        <EllipseGeometry Center="60, 60" RadiusX="60" RadiusY="60" />
                    </Image.Clip>
                </Image>
                    
                <DockPanel Background="{Binding Background, ElementName=LeftGrid}" Grid.Row="2">
                    <TextBlock Text="Иван Иванов" DockPanel.Dock="Top" HorizontalAlignment="Center" Style="{DynamicResource NameSideTextBlock}"/>
                    <TextBlock Text="@ivanov" DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{DynamicResource NickSideTextBlock}"/>
                </DockPanel>
            </Grid>
            
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <Border Grid.RowSpan="2" Style="{DynamicResource SideRectBorder}" Margin="0,0,-1,0"/>
                <Border Grid.Column="1" Grid.RowSpan="2" Style="{DynamicResource SideRectBorder}"/>
                
                <TextBlock Text="12,490" VerticalAlignment="Bottom" HorizontalAlignment="Center" Style="{DynamicResource NumberTextBlock}"/>
                <TextBlock Grid.Column="1" Text="2,490" VerticalAlignment="Bottom" HorizontalAlignment="Center" Style="{DynamicResource NumberTextBlock}"/>
                <TextBlock Grid.Row="1" Text="Читают" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{DynamicResource ReadTextBlock}"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="Читает" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{DynamicResource ReadTextBlock}"/>
            </Grid>
            
            <DockPanel Grid.Row="2" Margin="10,0,0,0" >
                <TextBlock Text="Актуальные темы:" HorizontalAlignment="Left" VerticalAlignment="Center" 
                           DockPanel.Dock="Top" Margin="10,0,0,10" Style="{DynamicResource ActualSideTextBlock}"/>
                <ListView x:Name="NickSideList" ItemsSource="{Binding Mode=OneWay}" BorderThickness="0" DataContext="{DynamicResource NickSideList}" >
                    <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" Height="25">
                                    <Hyperlink Style="{DynamicResource HashText}" > <Run Text="{Binding Mode=OneWay}"/> </Hyperlink>
                                </TextBlock>
                            </DataTemplate>
                    </ListView.ItemTemplate>    
                </ListView>
            </DockPanel>
            
        </Grid>

        <Grid x:Name="RightGrid" Grid.Column="1" Margin="10,0,0,0">
            <Border Grid.Row="0">
                <StackPanel VerticalAlignment="Center" Margin="20,0">
                    <Label Content="Поиск" Style="{DynamicResource HeaderText}"/>
                    <DockPanel Height="44" >
                        
                        <Button Height="44" Width="105" Margin="5,0,0,0" Background="White" Padding="1" DockPanel.Dock="Right" >
                            <StackPanel MinHeight="44" Orientation="Horizontal" Margin="3,0,0,0">
                                <Image Source="{DynamicResource ImageHome}" Stretch="None" SnapsToDevicePixels="True" ClipToBounds="True" />    
                                <TextBlock Text="Домой" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="7,0,0,0" Foreground="{DynamicResource RefBrush}"/>
                            </StackPanel>
                        </Button>
                        
                        <Button Height="44" Width="55" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource BlueBtn}" Margin="0,0,1,0"  DockPanel.Dock="Right">
                            <Image Source="{DynamicResource ImageFind}" Stretch="None" />
                        </Button>
                        
                        <RichTextBox  Template="{DynamicResource FindTemplate}" Style="{DynamicResource FindText}"
                                 DockPanel.Dock="Left" Height="44" VerticalContentAlignment="Center" >
                            <FlowDocument>
                                <Paragraph ><Run Text="Введите"/><Run Text=" "/><Run FontStyle="Italic" Text="#хештег"/><Run Text=" или "/><Run FontStyle="Italic" Text="@имя"/><Run Text=" "/></Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        
                    </DockPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="1" Margin="0,10,0,0" Background="{DynamicResource LightGray}" >
                <DockPanel  ClipToBounds="True" >
                    <Grid DockPanel.Dock="Bottom" Background="{x:Null}" Height="40">
                        <TextBlock ClipToBounds="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Hyperlink Style="{DynamicResource AtherRefText}" ><Run Text="Загрузить другие записи"/></Hyperlink>
                        </TextBlock>
                    </Grid>
                    <ListView MinHeight="100" MinWidth="100" DockPanel.Dock="Top" ItemsSource="{DynamicResource NickSideList}" 
                              HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" BorderThickness="0"
                              ScrollViewer.CanContentScroll="False"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                              Style="{DynamicResource MyListBox}" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="{DynamicResource BorderBrush}"  BorderThickness="0,0,0,1" Grid.Column="1">
                                    <Grid UseLayoutRounding="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40" MinWidth="70"/>
                                            <ColumnDefinition Width="*" MinWidth="100"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" MinHeight="40"/>
                                            <RowDefinition Height="1*" MinHeight="40"/>
                                        </Grid.RowDefinitions>
                                    
                                        <DockPanel Grid.Column="1">
                                            <TextBlock Margin="5,0,0,5" DockPanel.Dock="Left" Text="Анатолий Хацзсз" VerticalAlignment="Bottom" Style="{DynamicResource NamePostTextBlock}"/>
                                            <TextBlock Margin="10,0,10,5" DockPanel.Dock="Right" Text="" VerticalAlignment="Bottom" Style="{DynamicResource TimeTextBlock}"><Run Text="N минут назад"/></TextBlock>
                                            <TextBlock Margin="25,0,0,5" DockPanel.Dock="Left" Style="{DynamicResource NickPostTextBlock}"
                                                       Text="@sanya" VerticalAlignment="Bottom" />
                                        </DockPanel>
                                    
                                        <TextBlock Margin="5" Style="{DynamicResource PostTextBlock}" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="1" >
                                            <Run Text="Ну я бы не сказал, что в этой стране "/>
                                            <Hyperlink  Style="{DynamicResource HashText}" >#рубль</Hyperlink>
                                            <Run Text=" сможет &quot;обвалиться&quot;"/>
                                        </TextBlock>
                                         
                                        <Image Grid.RowSpan="2" Source="{DynamicResource ImageFace}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="40" Height="40" Stretch="Fill" Margin="0,0,10,0" >
                                            <Image.Clip>
                                                <EllipseGeometry Center="20, 20" RadiusX="20" RadiusY="20" />
                                            </Image.Clip>
                                        </Image>   
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    
                </DockPanel>
            </Border>

        <Grid.RowDefinitions>
            <RowDefinition Height="113" />
            <RowDefinition Height="1*" MinHeight="150"/>
        </Grid.RowDefinitions>
        </Grid>
    </Grid>
</Window>
